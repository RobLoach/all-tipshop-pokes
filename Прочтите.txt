............:::::::::::POKEs Database for ZX Spectrum V1.1:::::::::::::...........
Количество файлов: 2828.
Работа проделана: Lady Eklipse

Содержание
1. Об этой базе данных.
2. О структуре .pok-файлов.
2.1. Редактирование .pok-файла для Ваших нужд.
3. Как использовать .pok-файлы в эмуляторах.
4. Использование базы данных на реальном компьютере ZX Spectrum.

1. Об этой базе данных.
	Это полная коллекция чит-кодов (на бесконечные жизни, патроны, для быстрого перемещения между уровнями и т. д.) для более чем 2500 игр на микрокомпьютере ZX Spectrum. Основной источник кодов для этой базы данных - вебсайт, поддерживаемый Джерардом Суини http://www.the-tipshop.co.uk/
	Цель этой базы данных - облегчение ввода кодов в играх насколько это возможно. Формат .pok поддерживается многими известными эмуляторами Спекки для всех платформ, и Вы даже можете их использовать на реальной машине ZX Spectrum, при помощи интерфейса DivIDE.
	База данных сделана полностью вручную, с использованием Notepad++ и некоторы простых макросов. Многие файлы были проверены на то, что они нормально открываются, но я не могу гарантировать, что все чит-коды работают как следует: я просто привела их в удобный формат.
	Файлы сортированы по алфавиту, потому что загрузка более 3000 файлов сразу может оказаться долгой, так же как и прокручивание всего списка, особенно на реальном железе. Но если Вам сильно хочется, чтобы все файлы были в одной директории, я присоединила два .bat-файла: !sort.bat и !unsort.bat. Просто запустите !unsort.bat, и все файлы окажутся в одной директории. !sort.bat наоборот, рассортирует все файлы по алфавиту: одна поддиректория на каждую букву алфавита и одна отдельная - для цифр. Вы можете использовать эти две небольших программки для любых целей, то есть, для сортировки любых файлов, когда у вас их такое большое количество, что их сложно рассортировать вручную. Только не переименовывайте эти .bat файлы, они должны начинаться с '!', иначе они в процессе работы будут сортировать сами себя, оставляя сортировку незавершенной.
	
2. О структуре .pok-файлов.
	Каждая строчка в .pok-файле начинается с одной из следующих заглавных букв: N, M, Z, Y. .pok-файлы - это скрипты, поэтому добавление символа в место, где он не должен быть, скорее всего сделает файл нерабочим - до тех пор, пока Вы не найдете в нем ошибку и не исправите ее.
N ставится перед текстовым описанием кода.
После описания Вы увидите один или более адресов памяти (в десятичном формате), значения которых (тоже десятичные) подлежат изменению.
M ставится перед каждым адресом, подлежащим изменению, за исключением самого последнего в данной записи.
Z ставится перед последним или единственным адресом в коде.
Каждый .pok-файл должен заканчиваться строкой, состоящей из единственного символа - Y.
Рассмотрим, к примеру, содержимое следующего небольшого .pok-файла:

NInfinite Lives
Z 8 45525 0 25
Y

Четыре числа после буквы Z означают следующее:
8 - адрес банка памяти. Обычно он либо неизвестен, либо неважен, поэтому 8 в данном случае означает "любой". Если же нужно указать определенный банк памяти, в котором находится модифицируемый адрес, то вместо 8 стоит число от 0 до 7, но это достаточно редкий случай, поэтому 8 стоит в 99.9% кодов.
45525 - адрес памяти, подлежащий изменению.
0 - Значение, которое будет записано в адрес 45525, когда чит-код будет активирован.
25 - изначальное значение по адресу. Это значение будет записано в адрес 45525, если код будет выключен в эмуляторе или интерфейсе DivIDE. В большинстве случаев это значение неизвестно, поэтому я ставила 0 в конце большинства строчек, так что если Вы их активируете, обратное действие может быть невозможным.
В некоторых случаях необходимо изменить значение более одного адреса, чтобы активировать тот или иной чит-код. В этом случае запись в файле будет выглядеть следующим образом:

NInfinite Lives
M 8 45523 5 0
M 8 45524 1 0
Z 8 45525 66 0
Y

В этом случае, когда Вы включаете код на бесконечные жизни, модифицируются сразу три адреса: 45523, 45524 и 45525. В них будут записаны такие значения:
45523 - 5
45524 - 1
45525 - 66
Когда Вы выключите код на бесконечные жизни, во все адреса будет записан 0.

2.1. Редактирование .pok-файла для Ваших нужд.
Я старалась сделать коды и их описания максимально понятными и простыми в использовании, но в некоторых случаях было непросто составить код, который бы удовлетворял все нужды пользователей.
Приведу простой пример: код, позволяющий указать определенное число жизней в игре, вместо изначальных 3 или 5, но при этом НЕ делающий их бесконечными.

NLives = 255
Z 8 23485 255 255
Y

Легко  заметить, что 23485 - это адрес, по которому игра записывает текущее количество жизней. Если записать принудительно по этому адресу желаемое значение (255 - это технический максимум для 1 байта памяти), то игра будет думать, что Вы имеете то число жизней, которое указано по этому адресу.
В большинстве случаев я ставила значение 255 (как максимально вомзожное) также в качестве изначального, так что в таком случае выключение кода приведет к тому, что Вы снова будете иметь 255 жизней.
Если Вы не хотите при включении кода иметь сразу 255 жизней или игра начинает глючить из-за того, что в ней не предусмотрено такое большое количество жизней, Вы можете просто изменить .pok-файл или добавить в него еще несколько записей, например так:

NLives = 9
Z 8 23485 9 9
NLives = 99
Z 8 23485 99 99
NLives = 100 when ON, 3 when OFF
Z 8 23485 100 3
Y

Конечно, это относится не только к жизням. Для некоторых игр есть коды, изменяющие номер комнаты, в которой находитесь Вы или какой-либо важный для игры объект, количество разнообразных ресурсов в числовом отношении, текущее число очков и т. д. Если Вам не совсем понятно, как работает тот или иной чит-код, Вы всегда можете заглянуть на страничку интересующей Вас игры на сайте the-tipshop.co.uk, там может быть немного больше информации от автора данного чит-кода. Формат .pok-файлов не всегда позволяет мне добавить полное описание некоторых кодов.

3. Как использовать .pok-файлы в эмуляторах.
Формат .pok был изобретен в 1996 году и поддерживается широким разнообразием эмуляторов, хотя с тех пор такие файлы использовались редко, потому что их в целом было немного. Вообще, существует другая база данных помимо этой, но файлы в ней имеют неудобные имена в формате 8.3, там представлено менее 1000 игр (втрое меньше, чем в этой базе данных), и некоторые коды, которые я загружала из той базы данных, не работают вообще.
В эмуляторе Spectaculator можно просто перетащить .pok-файл на окно эмулятора или испрользовать пункт меню File - Open... Затем Вы выбираете коды, которые хотите включить, в любой необходимый момент, при помощи пункта меню Tools - Cheat options. Коды можно включать и выключать в любой момент игры, но нужно помнить, что в большинстве случаев игра должна быть загружена до применения кода, иначе код может не заработать. Иногда код надо включать в определенный момент, например, перед непосредственным запуском игры (т.е. во время отображения игрового меню).
Я не думаю, что у Вас могут возникнуть какие-либо сложности с использованием .pok-файлов из этой базы данных, если Вам по душе какой-нибудь другой эмулятор. Насколько мне известно, существует эмулятор Спектрума на Nintendo DS с поддержкой .pok-файлов.

4. Использование базы данных на реальном компьютере ZX Spectrum.
Да, это реально!
Изначально подобные коды стали появляться задолго до эмуляции Спектрума. Впрочем, для их использования необходимо было специальное устройство - Multiface. Оно использует аппаратные прерывания для останова работы загруженной в память программы и позволяет вводить коды в этот момент. Конечно, полностью вручную.
Но на сегодняшний день существует многоцелевой интерфейс для ZX Spectrum под названием DivIDE. Его основное применение - это загрузка программ для ZX Spectrum с карточки CompactFlash в течение долей секунды. Лично я рекомендую купить его у спектрумиста по имени Ben Versteeg, но если у него они распроданы, то ничего страшного, если Вы найдете их на eBay у кого-нибудь еще. Поверьте, этот интерфейс стоит своих денег. Правда, с другой стороны, его опасно использовать на советских спектрумах, он создавался для официальных микрокомпьютеров ряда ZX Spectrum: 48, 48+, 128, +2, +2A, +2B и +3.
Для DivIDE существует не менее десятка прошивок. Прошивка DemFiR поддерживает .pok-файлы так же, как их поддерживают и эмуляторы. Однако, Demfir - прошивка, ориентированная на использование CD-ROM, поэтому чтобы ее использовать, необходимо записать на CF-карточку собственноручно скомплированный файл ISO со всеми Вашими играми и .pok-файлами к ним. Вообще, изначально я решила создать эту баду данных только потому, что мне хотелось использовать чит-коды в Demfir без лишней возни.
Если у Вас есть интерфейс DivIDE, прошивку Demfir можно скачать здесь:
http://velesoft.speccy.cz/zx/divide/divide-demfir.htm
Внутри архива с прошивкой есть файл readme, так что надеюсь, что Вы разберетесь с ней сами. От себя только добавлю, что она плохо понимает имена файлов с символом '+', и образ ISO лучше либо записывать на свежеотформатированную CF-карточку, либо вручную переместить ее в начало карточки, в противном случае, Demfir может довольно долго искать, где находится этот файл. Также не забудьте, что в файле ISO должен быть загрузочный сектор для самой Demfir. В архиве находится заготовка для файла ISO, но Вы также можете использовать программу ImgBurn, чтобы создать его с нуля, просто выберите в этой программе "Write files/folders to disk" - затем выберите  "Advanced", затем "Bootable disk" и выберите demfirboot.img в качестве образа загрузочного диска.

Спасибо за использование этой базы данных, мне понадобилось немало времени, чтобы скомпилировать ее.
Любые вопросы Вы можете мне задать, написав на один из этих имейл-адресов:
elleonore [at] list.ru
eklipse [at] te.net.ua
С наилучшими пожеланиями,
Lady Eklipse.
http://lady-eklipse.livejournal.com/





